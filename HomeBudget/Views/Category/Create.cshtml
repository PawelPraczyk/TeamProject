@model HomeBudget.Models.Category

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Category"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:200px; margin-left:470px">
            @*@Html.LabelFor(m => m.Color)*@
            @*@Html.DropDownListFor(m => m.Color, new SelectList(Model.Colors, "Id", "Color"), "", new { @class = "form-control" })*@
            <label for=@Model.Color>Choose a color: </label>
            <select class="form-control" id=@Model.Color name=@Model.Color>
                @foreach (var item in Model.Colors)
                {
                    <option id=@item style="background-color:@item.Color" value=@item></option>
                }
            </select>
        </div>

        <div class="form-group" style="width:200px; margin-left:470px">
            @*@Html.LabelFor(m => m.Color)*@
            @*@Html.DropDownListFor(m => m.Color, new SelectList(Model.Colors, "Id", "Color"), "", new { @class = "form-control" })*@
            <label for=@Model.Color>Choose an icon: </label>
            <select id="myDropdown" class="form-group" style="width:100px">
                @foreach (var item in Model.Icons)
                {
                    <option value="@item.Id" data-imagesrc="@item.ImagePath"
                            data-description="">
                    </option>
                }

            </select>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery.ddslick.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/prashantchaudhary/ddslick/master/jquery.ddslick.min.js"></script>
    
    <script>
        $('#myDropdown').ddslick({
            onSelected: function (selectedData) {
                $('#demoShowSelected').data('ddslick');
            }
        });
        $('#demoShowSelected').ddslick({
            data: ddData,
            selectText: "Select your favorite social network",
        });
        $('#showSelectedData').on('click', function () {
            var ddData = $('#demoShowSelected').data('ddslick');
            displaySelectedData("2: Getting Selected Dropdown Data", ddData);
        });
    </script>
}